#version=DEVEL
# System authorization information
auth --enableshadow --passalgo=sha512
# Use network installation
url --url="http://10.10.3.144/centos7-install/"
# Use graphical install
# graphical
# Use text install
text
# Run the Setup Agent on first boot
firstboot --enable
# ignoredisk --only-use=sdb
# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8

# Network information
network  --bootproto=dhcp --device=enp3s0 --ipv6=auto --activate
network  --hostname=localhost.localdomain

# Root password
rootpw --iscrypted $6$5k7m6lU1sM2qQLwA$vEjfrPtkgZOGW9m8mNq/sYBHIHDzMcnCfl4bog3oduXPHFgP7XRcGxMqRCeBELGlGLTE0CVEiK1NUyBSmTvBH/
# System services
services --disabled="chronyd"
# System timezone
timezone America/Los_Angeles --isUtc --nontp
# System bootloader configuration
bootloader --append=" crashkernel=auto" --location=mbr
autopart --type=lvm
# Partition clearing information
clearpart --all

# Reboot after installation is complete
# reboot

%packages
@^minimal
@core
kexec-tools

%end

%addon com_redhat_kdump --enable --reserve-mb='auto'

%end

%anaconda
pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
%end

# Post Installation Script for Installing Ambari
%post --log=/root/m-turbot-ks-post.log
#!/bin/bash
# Reference: https://superuser.com/questions/1163676/how-to-echo-a-line-of-bash-to-file-without-executing
CHECK_IP=$(hostname -I | grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}')
# Verify on node1-sb, if so, then install pssh
case "$CHECK_IP" in
  "10.10.2.11") printf "Setting up Node1-sb:\n"
    printf "1. Preparing Environment....\n"
    printf "Task 1: Installing pssh and sshpass....\n"
    yum install -y epel-release
    yum install -y pssh
    yum install -y sshpass
    # Create pssh_hosts file

    printf "Task 2: Creating pssh-hosts file\n"
    tee -a /etc/pssh-hosts << EOF
    10.10.2.11
    10.10.2.12
    10.10.2.13
    10.10.2.14
    10.10.2.15
    10.10.2.16
    10.10.2.17
    10.10.2.18
    EOF

    # Creating script that will be used to add hosts info to each host in cluster
    printf "Task 3: Creating shell script to append ip map host across each node\n"
    tee -a /append_hosts.sh << EOF
    #!/bin/bash
    cat << EOT >> /etc/hosts
    10.10.2.11 node1-sb.hortonworks.com
    10.10.2.12 node2-sb.hortonworks.com
    10.10.2.13 node3-sb.hortonworks.com
    10.10.2.14 node4-sb.hortonworks.com
    10.10.2.15 node5-sb.hortonworks.com
    10.10.2.16 node6-sb.hortonworks.com
    10.10.2.17 node7-sb.hortonworks.com
    10.10.2.18 node8-sb.hortonworks.com
    EOT
    EOF

    printf "Task 4: Setting up Password-less SSH on Each Host\n"
    # Run shell script on each host ip address provided in pssh-hosts file
    # Appends map of ip to host on each node's hosts file

    printf "Task 4.1: Editing /etc/hosts file on every host in cluster\n"
    printf "to contain IP address and Fully Qualified Domain Name...\n"
    sshpass -p "hadoop" pssh -h /etc/pssh-hosts -x "-o StrictHostKeyChecking=no" -A -I < "/append_hosts.sh"

    printf "Task 4.2: Creating public and private SSH keys on Ambari Server Host\n"
    # Reference: https://stackoverflow.com/questions/10767488/automate-ssh-keygen-t-rsa-so-it-does-not-ask-for-a-passphrase
    ssh-keygen -q -t rsa -f ~/.ssh/id_rsa -N ''
    # Add SSH Public Key to Authorized_keys file to each target host
    printf "Task 4.3: Copy SSH Public Key into authorized_keys file\n"
    cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys

    # Create ~/.ssh folder on each host
    printf "Task 4.4: Create ~/.ssh folder on each host\n"
    sshpass -p "hadoop" pssh -h /etc/pssh-hosts -l root -x "-o StrictHostKeyChecking=no" -A -i "mkdir ~/.ssh"

    # Copy and Send id_rsa.pub and authorized_keys files to each host
    # Reference: https://www.tecmint.com/copy-files-to-multiple-linux-servers/
    printf "Task 4.5: Copy and Send _id_rsa.pub and authorized_keys files to each host\n"
    sshpass -p "hadoop" pscp.pssh -h /etc/pssh-hosts -l root -x "-o StrictHostKeyChecking=no" -Av ~/.ssh/id_rsa.pub ~/.ssh/
    sshpass -p "hadoop" pscp.pssh -h /etc/pssh-hosts -l root -x "-o StrictHostKeyChecking=no" -Av ~/.ssh/authorized_keys ~/.ssh/

    printf "Task 4.6: Set permissions ~/.ssh and authorized_keys on each host\n"
    sshpass -p "hadoop" pssh -h /etc/pssh-hosts -l root -x "-o StrictHostKeyChecking=no" -A -i "chmod 700 ~/.ssh"
    sshpass -p "hadoop" pssh -h /etc/pssh-hosts -l root -x "-o StrictHostKeyChecking=no" -A -i "chmod 600 ~/.ssh/authorized_keys"

    # Set Hostname for Node1
    printf "Task 4.7: Permanently set hostname\n"
    hostnamectl set-hostname node1-sb.hortonworks.com

    printf "Task 4.8: Appending FQDN to Network Config file\n"
    tee -a /etc/sysconfig/network << EOF
    NETWORKING=yes
    HOSTNAME=node1-sb.hortonworks.com
    EOF

    # Done setting password-less SSH
    printf "Task 5: Enable NTP on each node in Cluster and Browser Host\n"
    pssh -h /etc/pssh-hosts -l root -x "-o StrictHostKeyChecking=no" -A -i "yum install -y ntp"
    pssh -h /etc/pssh-hosts -l root -x "-o StrictHostKeyChecking=no" -A -i "systemctl enable ntpd"

    printf "Task 5.1: Enable CHRONY on each node in Cluster and Browser Host\n"
    pssh -h /etc/pssh-hosts -l root -x "-o StrictHostKeyChecking=no" -A -i "yum install -y chrony"
    # pssh -h /etc/pssh-hosts -l root -x "-o StrictHostKeyChecking=no" -A -i "systemctl start chronyd"
    pssh -h /etc/pssh-hosts -l root -x "-o StrictHostKeyChecking=no" -A -i "systemctl enable chronyd"

    printf "Task 6: Disable iptables on each host for Ambari to communicate with them\n"
    pssh -h /etc/pssh-hosts -l root -x "-o StrictHostKeyChecking=no" -A -i "systemctl disable firewalld"
    # pssh -h /etc/pssh-hosts -l root -x "-o StrictHostKeyChecking=no" -A -i "service firewalld stop"

    printf "Task 7: Disable SELinux and PackageKit\n"
    pssh -h /etc/pssh-hosts -l root -x "-o StrictHostKeyChecking=no" -A -i "setenforce 0"

    # Check on install host (Ambari Server) if path to refresh-packagekit.conf
    # exists, if not, then no need to disable it
    if [ -e /etc/yum/pluginconf.d/refresh-packagekit.conf ]; then
      printf "refresh-packagekit.conf exists\n";
      DISABLED=0
      perl -pi -e "s/(enabled)(.*=.*)([0-9]+)/\1\2$DISABLED/g" /etc/yum/pluginconf.d/refresh-packagekit.conf
    else
      printf "refresh-packagekit.conf is nonexistent\n";
    fi

    # Set umask to 022 since Ambari, HDP, HDF support that value
    printf "Set unmask to 0022 since Ambari, HDP, HDF support that value\n"
    pssh -h /etc/pssh-hosts -l root -x "-o StrictHostKeyChecking=no" -A -i "umask 0022"

    # On Node1 Server Host, download Ambari Repo
    prinf "Task 8: Downloading Ambari 2.7 Repo\n"
    # Install wget on each node
    pssh -h /etc/pssh-hosts -l root -x "-o StrictHostKeyChecking=no" -A -i "yum install -y wget"

    # Reference for Ambari Repo:
    wget -nv http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.7.0.0/ambari.repo -O /etc/yum.repos.d/ambari.repo

    # Reference for HDP3.0: https://docs.hortonworks.com/HDPDocuments/Ambari-2.7.0.0/bk_ambari-installation/content/hdp_30_repositories.html
    wget -nv http://public-repo-1.hortonworks.com/HDP/centos7/3.x/updates/3.0.0.0/hdp.repo -O /etc/yum.repos.d/hdp.repo
    # Confirm repository list has Ambari Repo
    REPO_CONFIG=$(yum repolist)

    #
    HAS_AMBARI_REPO=$(echo $REPO_CONFIG | grep -oE '(^| )ambari-2.7.[0-9].[0-9]( |$)' | awk 'FNR == 1 {print }')
    if [ "$HAS_AMBARI_REPO" = "ambari-2.7.0.0" ]; then
      printf "Task 9: Repo List has Ambari Repo, Installing ambari-server\n"
      yum install -y ambari-server

      # automate ambari-server setup to accept all default values
      printf "Setting up ambari-server\n"
      ambari-server setup -s

      printf "Starting Ambari\n"
      yum install -y net-tools
      ambari-server start
      ambari-server status
      # Now ambari UI should be reachable at: http://node1-sb.hortonworks.com:8080
    else
      printf "Repo List doesn't have Ambari Repo\n"
    fi
    ;;
  "10.10.2.12") printf "Setting up Node2-sb:\n"
    printf "Task 1: Permanently set hostname\n"
    hostnamectl set-hostname node2-sb.hortonworks.com
    printf "Task 2: Appending FQDN to Network Config file\n"
    tee -a /etc/sysconfig/network << EOF
    NETWORKING=yes
    HOSTNAME=node2-sb.hortonworks.com
    EOF
    ;;
  "10.10.2.13") printf "Setting up Node3-sb:\n"
    printf "Task 1: Permanently set hostname\n"
    hostnamectl set-hostname node3-sb.hortonworks.com
    printf "Task 2: Appending FQDN to Network Config file\n"
    tee -a /etc/sysconfig/network << EOF
    NETWORKING=yes
    HOSTNAME=node3-sb.hortonworks.com
    EOF
    ;;
  "10.10.2.14") printf "Setting up Node4-sb:\n"
    printf "Task 1: Permanently set hostname\n"
    hostnamectl set-hostname node4-sb.hortonworks.com
    printf "Task 2: Appending FQDN to Network Config file\n"
    tee -a /etc/sysconfig/network << EOF
    NETWORKING=yes
    HOSTNAME=node4-sb.hortonworks.com
    EOF
    ;;
  "10.10.2.15") printf "Setting up Node5-sb:\n"
    printf "Task 1: Permanently set hostname\n"
    hostnamectl set-hostname node5-sb.hortonworks.com
    printf "Task 2: Appending FQDN to Network Config file\n"
    tee -a /etc/sysconfig/network << EOF
    NETWORKING=yes
    HOSTNAME=node5-sb.hortonworks.com
    EOF
    ;;
  "10.10.2.16") printf "Setting up Node6-sb:\n"
    printf "Task 1: Permanently set hostname\n"
    hostnamectl set-hostname node6-sb.hortonworks.com
    printf "Task 2: Appending FQDN to Network Config file\n"
    tee -a /etc/sysconfig/network << EOF
    NETWORKING=yes
    HOSTNAME=node6-sb.hortonworks.com
    EOF
    ;;
  "10.10.2.17") printf "Setting up Node7-sb:\n"
    printf "Task 1: Permanently set hostname\n"
    hostnamectl set-hostname node7-sb.hortonworks.com
    printf "Task 2: Appending FQDN to Network Config file\n"
    tee -a /etc/sysconfig/network << EOF
    NETWORKING=yes
    HOSTNAME=node7-sb.hortonworks.com
    EOF
    ;;
  "10.10.2.18") printf "Setting up Node8-sb:\n"
    printf "Task 1: Permanently set hostname\n"
    hostnamectl set-hostname node8-sb.hortonworks.com
    printf "Task 2: Appending FQDN to Network Config file\n"
    tee -a /etc/sysconfig/network << EOF
    NETWORKING=yes
    HOSTNAME=node8-sb.hortonworks.com
    EOF
    ;;
  *)
    printf "Automation applies to all nodes in the cluster\n"
    ;;
esac

%end
